// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DB_URL")
  shadowDatabaseUrl = env("DB_SHADOW_URL")
}

model session {
  id            String   @id @default(uuid())
  shop          String
  state         String
  isOnline      Boolean
  scope         String
  expires       DateTime?
  accessToken   String
  userId        String?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean
  locale        String?
  collaborator  Boolean
  emailVerified Boolean
}

// Example Stockdb model included for reference, from your existing code.
model Stockdb {
  shop             String
  productVariantId String
  title            String?
  productId        String?
  productHandle    String?
  oldQuantity      Int      @default(0)

  @@id([shop, productVariantId])
}

model WebhookEvent {
  id              String   @id @default(uuid())
  inventoryItemId String
  newQuantity     Int
  processedAt     DateTime @default(now())

  @@index([inventoryItemId])
}

/**
 * This model stores your subscription & usage data for each shop.
 * One record per store.
 */
model ShopSubscription {
  id                    String   @id @default(uuid())
  shop                  String   @unique
  shopDomain            String?  // Full domain (myshopify.com)
  plan                  String?  // e.g. "FREE" or "PAID"
  status                String?  // e.g. "ACTIVE", "CANCELLED", etc.
  startDate             DateTime?
  variantsLimit         Int?     @default(0)
  syncsQuantity         Int?     @default(0)
  customApiUrl          String?  // Custom URL for webhooks
  shopifySubscriptionId String? 
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model ProcessedWebhook {
  id          String   @id @default(uuid())
  eventId     String   @unique
  topic       String
  shop        String
  processedAt DateTime
  createdAt   DateTime @default(now())

  @@index([shop, topic])
  @@index([eventId])
}

